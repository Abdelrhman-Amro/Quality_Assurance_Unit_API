{
    "swagger": "2.0",
    "info": {
        "title": "Quality Assurance Unit - API",
        "description": "API documentation for the Quality Assurance Unit system in colleges.",
        "version": "v1"
    },
    "host": "127.0.0.1:8000",
    "schemes": ["http"],
    "basePath": "/api",
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ],
    "paths": {
        "/token/": {
            "post": {
                "operationId": "token_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenObtainPair"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenObtainPair"
                        }
                    }
                },
                "tags": ["token"]
            },
            "parameters": []
        },
        "/token/refresh/": {
            "post": {
                "operationId": "token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                },
                "tags": ["token"]
            },
            "parameters": []
        },
        "/user/": {
            "get": {
                "operationId": "user_read",
                "description": "View for retrieving user details.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["user"]
            },
            "parameters": []
        },
        "/users/": {
            "get": {
                "operationId": "users_list",
                "description": "ViewSet for the User model.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "tags": ["users"]
            },
            "post": {
                "operationId": "users_create",
                "description": "ViewSet for the User model.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["users"]
            },
            "parameters": []
        },
        "/users/{id}/": {
            "get": {
                "operationId": "users_read",
                "description": "ViewSet for the User model.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["users"]
            },
            "put": {
                "operationId": "users_update",
                "description": "ViewSet for the User model.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["users"]
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "ViewSet for the User model.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": ["users"]
            },
            "delete": {
                "operationId": "users_delete",
                "description": "ViewSet for the User model.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["users"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this user.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        }
    },
    "definitions": {
        "TokenObtainPair": {
            "required": ["email", "password"],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenRefresh": {
            "required": ["refresh"],
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                },
                "access": {
                    "title": "Access",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "User": {
            "required": [
                "username",
                "email",
                "first_name",
                "last_name",
                "role"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 150,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150
                },
                "is_staff": {
                    "title": "Staff status",
                    "description": "Designates whether the user can log into this admin site.",
                    "type": "boolean"
                },
                "role": {
                    "title": "Role",
                    "type": "string",
                    "enum": ["ADMIN", "SUPERVISOR", "PROFESSOR", "TA"]
                }
            }
        }
    }
}
